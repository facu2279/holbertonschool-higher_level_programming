>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()
>>> isinstance(bg, BaseGeometry)
True

>>> bg.integer_validator("my_int", 12)


>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("num")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("num", -10)
Traceback (most recent call last):
...
ValueError: num must be greater than 0

>>> bg.integer_validator("num","ten")
Traceback (most recent call last):
...
TypeError: num must be an integer


>>> bg.integer_validator("num", 0)
Traceback (most recent call last):
...
ValueError: num must be greater than 0

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("age", (1,))
Traceback (most recent call last):
...
TypeError: age must be an integer


>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer